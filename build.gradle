plugins {
    id 'org.springframework.boot' version '2.4.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'checkstyle'
    id "com.github.spotbugs" version "4.6.0"
    id 'pmd'
}

group = 'de.hhu'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}
pmd {
    toolVersion = "6.29.0"

    // Alle eingebauten Regeln einschalten.
    // Per Default ist nur errorprone an.
    ruleSets = [
            "category/java/errorprone.xml",
            "category/java/bestpractices.xml",
            "category/java/codestyle.xml",
            "category/java/design.xml",
            "category/java/multithreading.xml",
            "category/java/performance.xml",
            "category/java/security.xml"
    ]
}
spotbugs {
    effort = "max" // (2)
}


spotbugsMain {
    reports { // (3)
        xml.enabled = false
        html.enabled = true
    }
}
checkstyle {
    toolVersion '8.37'
    ignoreFailures = false
    maxWarnings = 0
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
    implementation 'org.kohsuke:github-api:1.122'
    implementation 'com.opencsv:opencsv:5.0'
    implementation 'io.jsonwebtoken:jjwt-api:0.10.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.10.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.10.5'

    implementation 'com.google.guava:guava:30.1-jre'
    implementation 'com.google.guava:guava:30.1-jre'
    implementation 'org.springframework.boot:spring-boot-starter'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    //runtimeOnly 'com.microsoft.sqlserver:mssql-jdbc'
    //runtimeOnly 'mysql:mysql-connector-java'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    compileOnly 'com.github.spotbugs:spotbugs-annotations:4.1.4'

    implementation 'org.kohsuke:github-api:1.122'

    implementation 'io.jsonwebtoken:jjwt-api:0.10.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.10.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.10.5'

    testImplementation 'com.tngtech.archunit:archunit-junit5:0.15.0'
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}